// ---------- Generators & datasource ----------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ---------- Enums (unchanged) ----------
enum PaymentMethod {
  qris
  bank_transfer
}

enum Service {
  economy
  express
}

enum LocalDeliveryStatus {
  on_the_way
  pending_payment
  paid
}

enum DeliveryStatus {
  not_yet_create_label
  label_confirmed
  ready_to_send
  tracking_received
}

// ---------- Core people ----------
model Customer {
  id         String   @id @default(cuid())
  name       String
  phone      String   @unique
  shopeeName String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  orders     Order[]

  @@index([phone])
}

// *** NEW: Buyer (replaces Recipient). All fields REQUIRED. saleRecordNumber UNIQUE. ***
model Buyer {
  id                Int    @id @default(autoincrement())
  saleRecordNumber  String @unique
  buyerFullName     String
  buyerAddress1     String
  buyerAddress2     String
  buyerCity         String
  buyerState        String
  buyerZip          String
  buyerCountry      String
  buyerPhone        String
  phoneCode         String @default("")   // <â€” NEW (required, Kurasi name)

  orders Order[]

  @@index([buyerFullName])
}

// ---------- Orders & package ----------
model Order {
  id       String   @id @default(cuid())
  placedAt DateTime
  notes    String?

  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Restrict)
  customerId String

  // Link to Buyer (int)
  buyer   Buyer @relation(fields: [buyerId], references: [id], onDelete: Restrict)
  buyerId Int

  package   PackageDetail @relation(fields: [packageId], references: [id], onDelete: Cascade)
  packageId String        @unique

  quotedAmountMinor Int?
  currency          String?
  pricingSource     String?

  localStatus    LocalDeliveryStatus @default(on_the_way)
  deliveryStatus DeliveryStatus      @default(not_yet_create_label)
  paymentMethod  PaymentMethod       @default(qris)

  externalRef  String?
  labelId      String?
  trackingLink String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  items OrderItem[]

  @@index([placedAt])
  @@index([localStatus, deliveryStatus])
  @@index([customerId])
  @@index([buyerId])
}

model PackageDetail {
  id              String   @id @default(cuid())
  weightGrams     Int?
  lengthCm        Decimal?
  widthCm         Decimal?
  heightCm        Decimal?
  volumetricGrams Int?
  service         Service
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  order           Order?
}

model OrderItem {
  id      String @id @default(cuid())
  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId String

  description     String
  quantity        Int
  valueMinor      Int
  itemWeightGrams Int
  currency        String
  sku             String?
  hsCode          String?
  countryOfOrigin String?

  @@index([orderId])
}
